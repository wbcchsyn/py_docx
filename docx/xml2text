#!/usr/bin/env python3

from xml.dom import minidom
from collections.abc import Iterator
from typing import Union


def extract_text(doc: minidom.Document) -> Iterator[minidom.Text]:
    """Extract text from doc."""

    for element in doc.childNodes:
        yield from iter_extract(element)


def iter_extract(element: Union[minidom.Element, minidom.Text]) -> Iterator[minidom.Text]:
    """Iterate over text elements and extract the text."""

    if isinstance(element, minidom.Text):
        yield element
    else:
        for child in element.childNodes:
            yield from iter_extract(child)


if __name__ == "__main__":
    import sys
    import argparse

    def parse_args(args: list[str]) -> argparse.Namespace:
        parser = argparse.ArgumentParser("Strip metadata and extract text from a XML file.")
        parser.add_argument(
            "--input", type=str, default="-", help="The file to extract text from. The default is stdin."
        )
        parser.add_argument(
            "--output", type=str, default="-", help="The file to write the extracted text to. The default is stdout."
        )
        return parser.parse_args(args)

    args = parse_args(sys.argv[1:])

    if args.input == "-":
        doc = minidom.parse(sys.stdin)
    else:
        doc = minidom.parse(args.input)

    text = "".join([element.data for element in extract_text(doc)])
    if args.output == "-":
        print(text)
    else:
        open(args.output, "w").write(text)
